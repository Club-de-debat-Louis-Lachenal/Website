<nav>
  <img src="logo.svg" class="logo" alt="Lachenal" />
  <!-- Kindof like a link... Must be _<id of section... See pages/index.astro> -->
  <div class="lnks">
    <a id="_hero">Accueil</a>
    <a id="_present">Pr√©sentation</a>
    <a id="_register">Inscription</a>
    <a id="_nums">Les chiffres</a>
    <a id="_tips">Tips</a>
  </div>
  <div class="hamburger">
    <div class="hline"></div>
    <div class="hline"></div>
    <div class="hline"></div>
  </div>
  <div class="line"></div>
</nav>

<script>
  function get_current_section_link(): Element {
    let new_link;
    for (let section of document.querySelectorAll("section")) {
      let rect = section.getBoundingClientRect();
      if (rect.top < 200) {
        new_link = nav.querySelector(`a#_${section.id}`)!;
        // No breaking because we want the last element
      }
    }
    if (typeof new_link === "undefined") {
      console.error("Can't find a link for current screen position !");
      for (let a of nav.querySelectorAll("a")) {
        if (a.id.startsWith("_")) {
          return a;
        } // Get first **usable** link (skipping logo etc)
      }
    }
    return new_link!;
  }

  function handleScroll() {
    if (window.scrollY > 70) {
      nav.classList.add("scrolled");
    } else {
      nav.classList.remove("scrolled");
    }
    let link = get_current_section_link();
    if (link != previous) {
      let dx =
        link.getBoundingClientRect().left -
        previous.getBoundingClientRect().left;
      if (dx > 0) {
        line.setAttribute(
          "style",
          `left: ${previous.getBoundingClientRect().left}px; width: ${dx + link.getBoundingClientRect().width}px;`
        );
      } else {
        line.setAttribute(
          "style",
          `left: ${link.getBoundingClientRect().left}px; width: ${Math.abs(dx) + link.getBoundingClientRect().width}px;`
        );
      }
      animating = true;
      setTimeout(() => {
        line.setAttribute(
          "style",
          `left: ${link.getBoundingClientRect().left}px; width: ${link.getBoundingClientRect().width}px;`
        );
        animating = false;
      }, 500);
      previous = link;
    }
    if (!animating) {
      line.setAttribute(
        "style",
        `left: ${link.getBoundingClientRect().left}px; width: ${link.getBoundingClientRect().width}px;`
      );
    }
  }

  let nav = document.querySelector("nav")!;
  let line = nav.querySelector(".line")!;
  let animating = false;
  document.addEventListener("scroll", handleScroll);
  window.addEventListener("resize", handleScroll);

  for (let section of document.querySelectorAll("section")) {
    let lnk = nav.querySelector(`a#_${section.id}`);
    if (lnk) {
      lnk.setAttribute("href", `#${section.id}`);
    }
  }

  // Call once to setup vars and underline current header (because the scroll is preserved on reload)
  let previous = get_current_section_link();
  handleScroll();

  let ham = nav.querySelector(".hamburger")!;
  ham.addEventListener("click", (e) => {
    if (nav.classList.contains("toggled")) {
      // Clicked on a link ?
      console.log(e.target);
    }
    nav.classList.toggle("toggled");
  });
  nav.addEventListener("click", (e) => {
    if (nav.classList.contains("toggled")) {
      if (e.target.href !== undefined) {
        nav.classList.toggle("toggled");
      }
    }
  });
</script>

<style lang="scss">
  nav {
    @apply flex flex-row items-center justify-around;
    height: var(--nav-size);
    z-index: 1000;
    top: 0;
    left: 0;
    width: 100%;
    border-bottom-left-radius: 10px;
    border-bottom-right-radius: 10px;
    position: fixed;
    background: rgba(white, 0.9);
    backdrop-filter: blur(5px);
    -webkit-backdrop-filter: blur(5px);
    animation: navbar_appear 0.5s linear forwards;
    transition: 0.5s;

    .line {
      position: absolute;
      height: 2px;
      bottom: 10px;
      left: 0;
      background: var(--secondary);
      transition: 0.5s;
    }

    a {
      padding: 20px;
      font-size: 24px;
      transition: all 0.4s ease;
      position: relative;
    }

    &.scrolled {
      box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
      //   animation: navbar_pop 0.5s linear forwards;
    }

    .logo {
      height: 95%;
    }

    // @keyframes navbar_pop {
    //   0% {
    //     transform: translateY(-100%);
    //   }
    //   100% {
    //     transform: translateY(0%);
    //   }
    // }
    // @keyframes navbar_appear {
    //   0% {
    //     transform: translateY(0%);
    //     position: fixed;
    //   }
    //   99% {
    //     transform: translateY(-100%);
    //     position: fixed;
    //   }
    //   100% {
    //     transform: translateY(0%);
    //     position: absolute;
    //   }
    // }
  }

  @media screen and (max-width: 1024px) {
    nav {
      .logo {
        display: none;
      }
    }
  }

  @media screen and (max-width: 768px) {
    nav {
      .line {
        display: none;
      }

      .lnks {
        @apply flex flex-col items-center justify-center;
        height: 100%;
        position: absolute;

        a {
          pointer-events: none;
          opacity: 0;
          text-transform: uppercase;
          font-weight: 900;
          font-size: 8vw !important;
          background: -webkit-linear-gradient(
            0deg,
            var(--primary),
            var(--primary),
            var(--primary),
            var(--secondary),
            var(--primary),
            var(--primary),
            var(--primary)
          );
          background-size: 300%;
          -webkit-background-clip: text;
          -webkit-text-fill-color: transparent;
          animation: text-grad 3s ease-in-out infinite;
        }
        @keyframes text-grad {
          0% {
            background-position-x: 0;
          }
          100% {
            background-position-x: 300%;
          }
        }
      }
      box-shadow: none !important;
      background: none;
      backdrop-filter: none;
      &::before {
        /* Un cercle en background du hamburger menu */
        content: "";
        position: absolute;
        width: 180px;
        height: 180px;
        border-radius: 50%;
        background: white;
        box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
        left: 100%;
        top: 0;
        transform: translate(-50%, -50%);
        transition: 0.5s;
      }

      .hamburger {
        position: absolute;
        width: 24px;
        height: 24px;
        top: 31.5px;
        transform: translateY(-50%);
        bottom: 0;
        right: 31.5px;
        transition: 0.5s;

        .hline {
          transition: 0.5s;
          position: absolute;
          left: 0;
          top: 0;
          width: 100%;
          height: 2.5px;
          border-radius: 20px;
          background: black;

          &:nth-child(1) {
            top: 0;
          }

          &:nth-child(2) {
            top: 50%;
            transform: translateY(-50%);
          }

          &:nth-child(3) {
            top: 100%;
            transform: translateY(-100%);
          }
        }
      }

      &.toggled {
        border-radius: 0;
        height: 100vh;
        &::before {
          width: 1600px;
          height: 1600px;
          left: 0;
          top: 0;
          transform: translate(-25%, -25%);
        }
        .lnks {
          a {
            pointer-events: all;
            opacity: 1;
            margin: 20px;
            font-size: 5vw;

            &:hover {
            }
          }
        }

        .hamburger {
          .hline {
            &:nth-child(1) {
              top: 50%;
              transform: rotate(45deg);
            }

            &:nth-child(2) {
              transform: translateX(500%);
            }

            &:nth-child(3) {
              top: 50%;
              transform: rotate(-45deg);
            }
          }
        }
      }
    }
  }
</style>
